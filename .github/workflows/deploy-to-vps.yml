name: Deploy to VPS

on:
  workflow_run:
    workflows: ['Push Docker Image']
    types: completed
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, linux]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull latest image
        run: docker pull kickedsoda/firstdue-listener:latest

      - name: Stop and remove existing container (if any)
        run: docker rm -f firstdue-listener || true

      - name: Generate .env file from template
        env:
          NODE_ENV: production
          FIRSTDUE_API_KEY: ${{ secrets.FIRSTDUE_API_KEY }}
          PORT: ${{ secrets.PORT }}
          TIMEZONE: ${{ vars.TIMEZONE }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          CONVEX_URL: ${{ vars.CONVEX_URL }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          WEATHER_LAT: ${{ vars.WEATHER_LAT }}
          WEATHER_LNG: ${{ vars.WEATHER_LNG }}
          WEATHER_UNITS: ${{ vars.WEATHER_UNITS }}
          GITHUB_COMMIT_SHA: ${{ github.sha }}
          API_KEY: ${{ secrets.API_KEY }}
          CONVEX_API_KEY: ${{ secrets.CONVEX_API_KEY }}
        run: |
          envsubst < firstdue-listener/.env.template > .env

      - name: Run container with env file
        run: |
          docker run -d \
            --name firstdue-listener \
            --network nginx-net \
            --restart unless-stopped \
            --env-file .env \
            -p "${{ secrets.PORT }}":"${{ secrets.PORT }}" \
            kickedsoda/firstdue-listener:latest
